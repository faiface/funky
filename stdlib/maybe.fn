union Maybe a = nothing | just a

func nothing? : Maybe a -> Bool =
    \maybe
    switch maybe
    case nothing true
    case just \x false

func extract! : Maybe a -> a =
    \maybe
    switch maybe
    case nothing panic "extract: nothing"
    case just \x x

func let-maybe : Maybe a -> (a -> Maybe b) -> Maybe b =
    \maybe \f
    switch maybe
    case nothing nothing
    case just \x f x

func if-nothing : a -> Maybe a -> a =
    \default \maybe
    switch maybe
    case nothing default
    case just \x x

func ? : a -> Maybe a -> a = if-nothing

func || : Maybe a -> Maybe a -> Maybe a =
    \maybe \default
    switch maybe
    case nothing default
    case just    just

func map : (a -> b) -> Maybe a -> Maybe b =
    \f \maybe
    switch maybe
    case nothing nothing
    case just \x just (f x)
